#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "./../data/grammar.y".
#

require 'racc/parser'


class Yay

class ParserGen < Racc::Parser

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 11, :_reduce_none,
 0, 11, :_reduce_none,
 2, 12, :_reduce_none,
 1, 12, :_reduce_none,
 3, 13, :_reduce_5,
 3, 13, :_reduce_6,
 2, 13, :_reduce_7,
 3, 14, :_reduce_8,
 1, 14, :_reduce_9,
 1, 17, :_reduce_10,
 1, 17, :_reduce_11,
 2, 16, :_reduce_12,
 4, 16, :_reduce_13,
 1, 16, :_reduce_14,
 1, 18, :_reduce_none,
 0, 18, :_reduce_none,
 1, 19, :_reduce_none,
 0, 19, :_reduce_none,
 2, 15, :_reduce_none,
 0, 15, :_reduce_none ]

racc_reduce_n = 21

racc_shift_n = 30

racc_action_table = [
    19,    19,     7,     8,    21,    21,   -16,   -16,    18,    16,
     3,     5,     7,     8,     3,     5,     7,     8,   -16,    16,
    26,    12,    12,    14,    12,    10,    28,    26 ]

racc_action_check = [
    15,    11,    17,    17,    15,    11,     9,     9,    10,     9,
     0,     0,     0,     0,     4,     4,     4,     4,    21,    21,
    21,     6,    12,     5,     3,     1,    25,    28 ]

racc_action_pointer = [
     8,    25,   nil,    15,    12,    19,    12,   nil,   nil,     2,
     8,    -1,    13,   nil,   nil,    -2,   nil,    -2,   nil,   nil,
   nil,    12,   nil,   nil,   nil,    20,   nil,   nil,    19,   nil ]

racc_action_default = [
    -2,   -21,    -1,   -20,    -4,   -21,   -20,   -10,   -11,    -9,
   -21,   -21,   -20,    -3,    -7,   -21,   -15,   -21,    30,   -14,
    -6,   -18,   -19,    -5,    -8,   -21,   -17,   -12,   -18,   -13 ]

racc_goto_table = [
    17,    11,    27,     2,    15,    24,     1,    13,   nil,    29,
    22,    20,    25,   nil,   nil,    23 ]

racc_goto_check = [
     8,     5,     9,     2,     5,     4,     1,     2,   nil,     9,
     5,     6,     8,   nil,   nil,     6 ]

racc_goto_pointer = [
   nil,     6,     3,   nil,   -12,    -2,     0,   nil,    -9,   -19 ]

racc_goto_default = [
   nil,   nil,   nil,     4,     6,   nil,   nil,     9,   nil,   nil ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :variable => 2,
 :include => 3,
 :literal => 4,
 :regex => 5,
 :colour => 6,
 :and => 7,
 :line => 8,
 :verb => 9 }

racc_use_result_var = true

racc_nt_base = 10

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'variable',
'include',
'literal',
'regex',
'colour',
'and',
'line',
'verb',
'$start',
'body',
'command_list',
'command',
'string_list',
'verbs_opt',
'value',
'string',
'and_opt',
'line_opt']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

 # reduce 1 omitted

 # reduce 2 omitted

 # reduce 3 omitted

 # reduce 4 omitted

module_eval <<'.,.,', './../data/grammar.y', 11
  def _reduce_5( val, _values, result )
 string_assign val[0], val[2]
   result
  end
.,.,

module_eval <<'.,.,', './../data/grammar.y', 12
  def _reduce_6( val, _values, result )
 var_assign    val[0], val[2]
   result
  end
.,.,

module_eval <<'.,.,', './../data/grammar.y', 13
  def _reduce_7( val, _values, result )
 load_file     val[0]
   result
  end
.,.,

module_eval <<'.,.,', './../data/grammar.y', 15
  def _reduce_8( val, _values, result )
 val[2].push(val[0]); result = val[2]
   result
  end
.,.,

module_eval <<'.,.,', './../data/grammar.y', 16
  def _reduce_9( val, _values, result )
 result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', './../data/grammar.y', 18
  def _reduce_10( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', './../data/grammar.y', 19
  def _reduce_11( val, _values, result )
 result = handle_regex(val[0])
   result
  end
.,.,

module_eval <<'.,.,', './../data/grammar.y', 21
  def _reduce_12( val, _values, result )
 result =
   result
  end
.,.,

module_eval <<'.,.,', './../data/grammar.y', 22
  def _reduce_13( val, _values, result )
 result =
   result
  end
.,.,

module_eval <<'.,.,', './../data/grammar.y', 23
  def _reduce_14( val, _values, result )
 result =
   result
  end
.,.,

 # reduce 15 omitted

 # reduce 16 omitted

 # reduce 17 omitted

 # reduce 18 omitted

 # reduce 19 omitted

 # reduce 20 omitted

 def _reduce_none( val, _values, result )
  result
 end

end   # class ParserGen

end # class Yay
