#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "./../data/grammar.y".
#

require 'racc/parser'


class Yay

class Parser < Racc::Parser

module_eval <<'..end ./../data/grammar.y modeval..id69016b9b4f', './../data/grammar.y', 56
  
  def parse(str)
    @q = []
    until str.empty?
      case str
      when /\A\s+/
      when /\A\d+/
        @q.push [:NUMBER, $&.to_i]
      when /\A.|\n/o
        s = $&
        @q.push [s, s]
      end
      str = $'
    end
    @q.push [false, '$end']
    do_parse
  end

  def next_token
    @q.shift
  end

..end ./../data/grammar.y modeval..id69016b9b4f

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 20, :_reduce_none,
 0, 20, :_reduce_none,
 1, 21, :_reduce_none,
 3, 21, :_reduce_none,
 1, 22, :_reduce_none,
 1, 22, :_reduce_none,
 3, 24, :_reduce_none,
 2, 24, :_reduce_none,
 1, 27, :_reduce_none,
 0, 27, :_reduce_none,
 1, 29, :_reduce_none,
 2, 29, :_reduce_none,
 1, 30, :_reduce_none,
 2, 30, :_reduce_none,
 1, 30, :_reduce_none,
 1, 26, :_reduce_none,
 3, 26, :_reduce_none,
 1, 31, :_reduce_none,
 1, 31, :_reduce_none,
 1, 31, :_reduce_none,
 1, 28, :_reduce_none,
 1, 28, :_reduce_none,
 2, 25, :_reduce_none,
 2, 25, :_reduce_none,
 2, 25, :_reduce_none,
 5, 25, :_reduce_none,
 1, 23, :_reduce_none,
 0, 23, :_reduce_none,
 1, 33, :_reduce_none,
 0, 33, :_reduce_none,
 1, 32, :_reduce_none,
 0, 32, :_reduce_none ]

racc_reduce_n = 33

racc_shift_n = 41

racc_action_table = [
    -2,    -3,     7,     8,    10,     7,     8,    10,    20,     2,
    21,     4,     2,    34,     4,     9,    17,    16,     9,   -28,
   -28,   -28,    20,    29,    21,     7,     8,    10,    25,    27,
    16,    31,    30,    25,    27,    25,    27,    25,    27,    38,
    39,    19 ]

racc_action_check = [
     0,     1,    15,    15,    15,     0,     0,     0,    26,    15,
    26,    15,     0,    20,     0,    15,     2,     1,     0,    11,
    11,    11,     6,    12,     6,    28,    28,    28,     6,     6,
    11,    13,    13,    39,    39,    18,    18,    22,    22,    29,
    33,     4 ]

racc_action_pointer = [
     0,     1,     3,   nil,    24,   nil,    20,   nil,   nil,   nil,
   nil,    14,    23,    21,   nil,    -3,   nil,   nil,    27,   nil,
    10,   nil,    29,   nil,   nil,   nil,     6,   nil,    20,    39,
   nil,   nil,   nil,    25,   nil,   nil,   nil,   nil,   nil,    25,
   nil ]

racc_action_default = [
   -32,   -28,   -33,    -5,   -30,    -6,   -33,   -18,   -19,   -31,
   -20,   -16,   -33,   -33,    -1,   -32,   -27,   -25,   -33,   -29,
   -13,   -15,   -33,    -8,    -9,   -21,   -11,   -22,   -33,   -33,
   -24,   -23,    -4,   -33,   -14,    -7,   -12,   -17,    41,   -33,
   -26 ]

racc_goto_table = [
    23,    24,    14,    15,    22,    37,    12,    18,   nil,   nil,
   nil,   nil,    33,    28,   nil,   nil,    35,    32,   nil,   nil,
   nil,    36,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    40 ]

racc_goto_check = [
     9,    10,     2,     4,     8,     7,     1,    14,   nil,   nil,
   nil,   nil,     9,     4,   nil,   nil,     9,     2,   nil,   nil,
   nil,    10,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     9 ]

racc_goto_pointer = [
   nil,     6,     2,   nil,     2,   nil,   nil,   -23,    -2,    -6,
    -5,   nil,   nil,   nil,     3 ]

racc_goto_default = [
   nil,   nil,   nil,     1,   nil,     3,     5,     6,   nil,   nil,
   nil,    26,    11,    13,   nil ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :is => 2,
 :a => 3,
 :are => 4,
 :regex => 5,
 :literal => 6,
 :literal_regex => 7,
 :variable => 8,
 :effect => 9,
 :sensitive => 10,
 :insensitive => 11,
 :include_words => 12,
 :filename => 13,
 :all => 14,
 :verb_opt => 15,
 :and => 16,
 :the => 17,
 :case => 18 }

racc_use_result_var = true

racc_nt_base = 19

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'is',
'a',
'are',
'regex',
'literal',
'literal_regex',
'variable',
'effect',
'sensitive',
'insensitive',
'include_words',
'filename',
'all',
'verb_opt',
'and',
'the',
'case',
'$start',
'main',
'expressions',
'expression',
'and_opt',
'phrase',
'command',
'subjects',
'verbs_opt',
'predicate',
'verbs',
'verb',
'subject',
'case_opt',
'the_opt']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

 # reduce 1 omitted

 # reduce 2 omitted

 # reduce 3 omitted

 # reduce 4 omitted

 # reduce 5 omitted

 # reduce 6 omitted

 # reduce 7 omitted

 # reduce 8 omitted

 # reduce 9 omitted

 # reduce 10 omitted

 # reduce 11 omitted

 # reduce 12 omitted

 # reduce 13 omitted

 # reduce 14 omitted

 # reduce 15 omitted

 # reduce 16 omitted

 # reduce 17 omitted

 # reduce 18 omitted

 # reduce 19 omitted

 # reduce 20 omitted

 # reduce 21 omitted

 # reduce 22 omitted

 # reduce 23 omitted

 # reduce 24 omitted

 # reduce 25 omitted

 # reduce 26 omitted

 # reduce 27 omitted

 # reduce 28 omitted

 # reduce 29 omitted

 # reduce 30 omitted

 # reduce 31 omitted

 # reduce 32 omitted

 def _reduce_none( val, _values, result )
  result
 end

end   # class Parser

end # class Yay

parser = Yay::Parser.new
while true
  puts
  print '? '
  str = gets.chop!
  break if /q/i =~ str
  begin
    puts "= #{parser.parse(str)}"
  rescue ParseError
    puts $!
  end
end
